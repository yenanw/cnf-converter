-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Formula/Par.y
-----------------------------------------------------------------------------

state 28 contains 5 reduce/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pFormula -> Formula                         (0)
	%start_pExp4 -> Exp4                               (1)
	%start_pExp3 -> Exp3                               (2)
	%start_pExp2 -> Exp2                               (3)
	%start_pExp1 -> Exp1                               (4)
	%start_pExp -> Exp                                 (5)
	%start_pLit -> Lit                                 (6)
	Proposition -> L_Proposition                       (7)
	Formula -> Exp                                     (8)
	Exp4 -> Lit                                        (9)
	Exp4 -> '(' Exp ')'                                (10)
	Exp3 -> '~' Exp3                                   (11)
	Exp3 -> Exp4                                       (12)
	Exp2 -> Exp2 '&' Exp3                              (13)
	Exp2 -> Exp3                                       (14)
	Exp1 -> Exp1 '|' Exp2                              (15)
	Exp1 -> Exp2                                       (16)
	Exp -> Exp1 '->' Exp                               (17)
	Exp -> Exp1                                        (18)
	Lit -> Proposition                                 (19)
	Lit -> '~' Proposition                             (20)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'&'            { PT _ (TS _ 1) }
	'('            { PT _ (TS _ 2) }
	')'            { PT _ (TS _ 3) }
	'->'           { PT _ (TS _ 4) }
	'|'            { PT _ (TS _ 5) }
	'~'            { PT _ (TS _ 6) }
	L_Proposition  { PT _ (T_Proposition $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pFormula rule  0
	%start_pExp4    rule  1
	%start_pExp3    rule  2
	%start_pExp2    rule  3
	%start_pExp1    rule  4
	%start_pExp     rule  5
	%start_pLit     rule  6
	Proposition     rule  7
	Formula         rule  8
	Exp4            rules 9, 10
	Exp3            rules 11, 12
	Exp2            rules 13, 14
	Exp1            rules 15, 16
	Exp             rules 17, 18
	Lit             rules 19, 20

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pFormula -> . Formula                        (rule 0)

	'('            shift, and enter state 18
	'~'            shift, and enter state 19
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Formula        goto state 24
	Exp4           goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 15
	Exp            goto state 25
	Lit            goto state 17

State 1

	%start_pExp4 -> . Exp4                              (rule 1)

	'('            shift, and enter state 18
	'~'            shift, and enter state 11
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Exp4           goto state 23
	Lit            goto state 17

State 2

	%start_pExp3 -> . Exp3                              (rule 2)

	'('            shift, and enter state 18
	'~'            shift, and enter state 19
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Exp4           goto state 12
	Exp3           goto state 22
	Lit            goto state 17

State 3

	%start_pExp2 -> . Exp2                              (rule 3)

	'('            shift, and enter state 18
	'~'            shift, and enter state 19
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Exp4           goto state 12
	Exp3           goto state 13
	Exp2           goto state 21
	Lit            goto state 17

State 4

	%start_pExp1 -> . Exp1                              (rule 4)

	'('            shift, and enter state 18
	'~'            shift, and enter state 19
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Exp4           goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 20
	Lit            goto state 17

State 5

	%start_pExp -> . Exp                                (rule 5)

	'('            shift, and enter state 18
	'~'            shift, and enter state 19
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Exp4           goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 15
	Exp            goto state 16
	Lit            goto state 17

State 6

	%start_pLit -> . Lit                                (rule 6)

	'~'            shift, and enter state 11
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Lit            goto state 10

State 7

	Proposition -> . L_Proposition                      (rule 7)

	L_Proposition  shift, and enter state 8


State 8

	Proposition -> L_Proposition .                      (rule 7)

	'&'            reduce using rule 7
	')'            reduce using rule 7
	'->'           reduce using rule 7
	'|'            reduce using rule 7
	%eof           reduce using rule 7


State 9

	Lit -> Proposition .                                (rule 19)

	'&'            reduce using rule 19
	')'            reduce using rule 19
	'->'           reduce using rule 19
	'|'            reduce using rule 19
	%eof           reduce using rule 19


State 10

	%start_pLit -> Lit .                                (rule 6)

	%eof           accept


State 11

	Lit -> '~' . Proposition                            (rule 20)

	L_Proposition  shift, and enter state 8

	Proposition    goto state 32

State 12

	Exp3 -> Exp4 .                                      (rule 12)

	'&'            reduce using rule 12
	')'            reduce using rule 12
	'->'           reduce using rule 12
	'|'            reduce using rule 12
	%eof           reduce using rule 12


State 13

	Exp2 -> Exp3 .                                      (rule 14)

	'&'            reduce using rule 14
	')'            reduce using rule 14
	'->'           reduce using rule 14
	'|'            reduce using rule 14
	%eof           reduce using rule 14


State 14

	Exp2 -> Exp2 . '&' Exp3                             (rule 13)
	Exp1 -> Exp2 .                                      (rule 16)

	'&'            shift, and enter state 26
	')'            reduce using rule 16
	'->'           reduce using rule 16
	'|'            reduce using rule 16
	%eof           reduce using rule 16


State 15

	Exp1 -> Exp1 . '|' Exp2                             (rule 15)
	Exp -> Exp1 . '->' Exp                              (rule 17)
	Exp -> Exp1 .                                       (rule 18)

	')'            reduce using rule 18
	'->'           shift, and enter state 31
	'|'            shift, and enter state 27
	%eof           reduce using rule 18


State 16

	%start_pExp -> Exp .                                (rule 5)

	%eof           accept


State 17

	Exp4 -> Lit .                                       (rule 9)

	'&'            reduce using rule 9
	')'            reduce using rule 9
	'->'           reduce using rule 9
	'|'            reduce using rule 9
	%eof           reduce using rule 9


State 18

	Exp4 -> '(' . Exp ')'                               (rule 10)

	'('            shift, and enter state 18
	'~'            shift, and enter state 19
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Exp4           goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 15
	Exp            goto state 30
	Lit            goto state 17

State 19

	Exp3 -> '~' . Exp3                                  (rule 11)
	Lit -> '~' . Proposition                            (rule 20)

	'('            shift, and enter state 18
	'~'            shift, and enter state 19
	L_Proposition  shift, and enter state 8

	Proposition    goto state 28
	Exp4           goto state 12
	Exp3           goto state 29
	Lit            goto state 17

State 20

	%start_pExp1 -> Exp1 .                              (rule 4)
	Exp1 -> Exp1 . '|' Exp2                             (rule 15)

	'|'            shift, and enter state 27
	%eof           accept


State 21

	%start_pExp2 -> Exp2 .                              (rule 3)
	Exp2 -> Exp2 . '&' Exp3                             (rule 13)

	'&'            shift, and enter state 26
	%eof           accept


State 22

	%start_pExp3 -> Exp3 .                              (rule 2)

	%eof           accept


State 23

	%start_pExp4 -> Exp4 .                              (rule 1)

	%eof           accept


State 24

	%start_pFormula -> Formula .                        (rule 0)

	%eof           accept


State 25

	Formula -> Exp .                                    (rule 8)

	%eof           reduce using rule 8


State 26

	Exp2 -> Exp2 '&' . Exp3                             (rule 13)

	'('            shift, and enter state 18
	'~'            shift, and enter state 19
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Exp4           goto state 12
	Exp3           goto state 36
	Lit            goto state 17

State 27

	Exp1 -> Exp1 '|' . Exp2                             (rule 15)

	'('            shift, and enter state 18
	'~'            shift, and enter state 19
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Exp4           goto state 12
	Exp3           goto state 13
	Exp2           goto state 35
	Lit            goto state 17

State 28

	Lit -> Proposition .                                (rule 19)
	Lit -> '~' Proposition .                            (rule 20)

	'&'            reduce using rule 20
			(reduce using rule 19)

	')'            reduce using rule 20
			(reduce using rule 19)

	'->'           reduce using rule 20
			(reduce using rule 19)

	'|'            reduce using rule 20
			(reduce using rule 19)

	%eof           reduce using rule 20
			(reduce using rule 19)



State 29

	Exp3 -> '~' Exp3 .                                  (rule 11)

	'&'            reduce using rule 11
	')'            reduce using rule 11
	'->'           reduce using rule 11
	'|'            reduce using rule 11
	%eof           reduce using rule 11


State 30

	Exp4 -> '(' Exp . ')'                               (rule 10)

	')'            shift, and enter state 34


State 31

	Exp -> Exp1 '->' . Exp                              (rule 17)

	'('            shift, and enter state 18
	'~'            shift, and enter state 19
	L_Proposition  shift, and enter state 8

	Proposition    goto state 9
	Exp4           goto state 12
	Exp3           goto state 13
	Exp2           goto state 14
	Exp1           goto state 15
	Exp            goto state 33
	Lit            goto state 17

State 32

	Lit -> '~' Proposition .                            (rule 20)

	%eof           reduce using rule 20


State 33

	Exp -> Exp1 '->' Exp .                              (rule 17)

	')'            reduce using rule 17
	%eof           reduce using rule 17


State 34

	Exp4 -> '(' Exp ')' .                               (rule 10)

	'&'            reduce using rule 10
	')'            reduce using rule 10
	'->'           reduce using rule 10
	'|'            reduce using rule 10
	%eof           reduce using rule 10


State 35

	Exp2 -> Exp2 . '&' Exp3                             (rule 13)
	Exp1 -> Exp1 '|' Exp2 .                             (rule 15)

	'&'            shift, and enter state 26
	')'            reduce using rule 15
	'->'           reduce using rule 15
	'|'            reduce using rule 15
	%eof           reduce using rule 15


State 36

	Exp2 -> Exp2 '&' Exp3 .                             (rule 13)

	'&'            reduce using rule 13
	')'            reduce using rule 13
	'->'           reduce using rule 13
	'|'            reduce using rule 13
	%eof           reduce using rule 13


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 21
Number of terminals: 7
Number of non-terminals: 15
Number of states: 37
